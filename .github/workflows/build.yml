---
# ba0fde3d-bee7-4307-b97b-17d0d20aff50
name: Build Image
on:
  push:
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  set-env:
    if: github.repository != 'AlmaLinux/atomic-respin-template'
    runs-on: ubuntu-latest
    outputs:
      LATEST_TAG: ${{ steps.set.outputs.LATEST_TAG }}
      REGISTRY: ${{ steps.set.outputs.REGISTRY }}
      REGISTRY_USER: ${{ steps.set.outputs.REGISTRY_USER }}
      PLATFORMS: ${{ steps.set.outputs.PLATFORMS }}
      IMAGE_PATH: ${{ steps.set.outputs.IMAGE_PATH }}
      IMAGE_NAME: ${{ steps.set.outputs.IMAGE_NAME }}
      IMAGE_REF: ${{ steps.set.outputs.IMAGE_REF }}
      IS_SIGNED: ${{ steps.set.outputs.IS_SIGNED }}
    steps:
      - name: Checkout github actions
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Set environment variables
        uses: ./.github/actions/config
        id: set
        with:
          SIGNING_SECRET: ${{ secrets.SIGNING_SECRET }}

  build-image:
    name: Build image
    runs-on: ubuntu-latest
    needs: set-env
    permissions:
      contents: read
      packages: write
      id-token: write
    outputs:
      image-ref: ${{ steps.build.outputs.image-ref }}
      digest: ${{ steps.build.outputs.digest }}
      version: ${{ steps.build.outputs.version }}
      major-version: ${{ steps.build.outputs.major-version }}
      redhat-version-id: ${{ steps.build.outputs.redhat-version-id }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: |
          if [[ "${{ github.repository_owner }}" == "kkslidermight" ]]; then
            echo "${{ secrets.GITHUB_TOKEN }}" | podman login ghcr.io -u ${{ needs.set-env.outputs.REGISTRY_USER }} --password-stdin
          else
            echo "${{ secrets.GHCR_PAT }}" | podman login ghcr.io -u ${{ needs.set-env.outputs.REGISTRY_USER }} --password-stdin
          fi

      - name: Install podman
        run: |
          sudo apt-get update
          sudo apt-get install -y podman

      - name: Build and push image
        id: build
        run: |
          IMAGE_REF="${{ needs.set-env.outputs.IMAGE_REF }}"
          IMAGE_TAG="${{ github.sha }}"
          FULL_IMAGE_REF="${IMAGE_REF}:${IMAGE_TAG}"
          podman build \
            --security-opt=label=disable \
            --cap-add=all \
            --device /dev/fuse \
            --build-arg IMAGE_NAME="${{ needs.set-env.outputs.IMAGE_NAME }}" \
            --build-arg IMAGE_REGISTRY="${{ needs.set-env.outputs.REGISTRY }}" \
            --build-arg VARIANT="" \
            -t "${FULL_IMAGE_REF}" \
            -f Dockerfile \
            .
          podman push "${FULL_IMAGE_REF}"
          DIGEST=$(podman inspect --format='{{.Digest}}' "${FULL_IMAGE_REF}")
          echo "image-ref=${IMAGE_REF}" >> $GITHUB_OUTPUT
          echo "digest=${DIGEST}" >> $GITHUB_OUTPUT
          echo "version=${IMAGE_TAG}" >> $GITHUB_OUTPUT
          echo "major-version=latest" >> $GITHUB_OUTPUT
          echo "redhat-version-id=10" >> $GITHUB_OUTPUT
