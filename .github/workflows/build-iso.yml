name: Build ISO

on:
  workflow_dispatch:
  push:
    branches: [ main ]


permissions:
  contents: read
  packages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  set-env:
    if: github.repository != 'AlmaLinux/atomic-respin-template'
    runs-on: ubuntu-latest
    outputs:
      LATEST_TAG: ${{ steps.set.outputs.LATEST_TAG }}
      REGISTRY: ${{ steps.set.outputs.REGISTRY }}
      REGISTRY_USER: ${{ steps.set.outputs.REGISTRY_USER }}
      PLATFORMS: ${{ steps.set.outputs.PLATFORMS }}
      IMAGE_PATH: ${{ steps.set.outputs.IMAGE_PATH }}
      IMAGE_NAME: ${{ steps.set.outputs.IMAGE_NAME }}
      IMAGE_REF: ${{ steps.set.outputs.IMAGE_REF }}
      IS_SIGNED: ${{ steps.set.outputs.IS_SIGNED }}
    steps:
      - name: Checkout github actions
        uses: actions/checkout@v4

      - name: Set environment variables
        uses: ./.github/actions/config
        id: set
        with:
          SIGNING_SECRET: ${{ secrets.SIGNING_SECRET }}

  build-iso:
    name: Build ISO
    needs: [set-env]
    uses: AlmaLinux/atomic-ci/.github/workflows/build-iso.yml@v8
    with:
      image-name: "${{ needs.set-env.outputs.IMAGE_NAME }}"
      image: "${{ needs.set-env.outputs.IMAGE_REF }}:${{ needs.set-env.outputs.LATEST_TAG }}"
      update_origin_ref: "${{ needs.set-env.outputs.IMAGE_REF }}:${{ needs.set-env.outputs.LATEST_TAG }}"
      update_is_signed: ${{ needs.set-env.outputs.IS_SIGNED == 'true' }}
      config-file: ./iso.toml
      platforms: ${{ needs.set-env.outputs.PLATFORMS }}
      REGISTRY: ${{ needs.set-env.outputs.REGISTRY }}
      REGISTRY_USER: ${{ needs.set-env.outputs.REGISTRY_USER }}
      upload-to-cloudflare: true
      bucket: ${{ secrets.BUCKET }}
    secrets:
      REGISTRY_TOKEN: ${{ secrets.GHCR_PAT }}
      R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
      ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
      SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
  # R2_ACCESS_KEY_ID and R2_SECRET_ACCESS_KEY are forwarded by the upstream
  # reusable workflow from ACCESS_KEY_ID and SECRET_ACCESS_KEY respectively.

  upload-r2-fallback:
    name: Upload to Cloudflare R2 (fallback)
    runs-on: ubuntu-latest
    needs: [build-iso]
    if: always()
    steps:
      - name: Ensure GitHub CLI is authenticated
        run: |
          echo "$GITHUB_TOKEN" | gh auth login --with-token

      - name: Download all artifacts from this run
        run: |
          gh run download ${{ github.run_id }} --dir ./artifacts || true

      - name: List downloaded files
        run: |
          ls -la artifacts || true

      - name: Upload artifacts to Cloudflare R2 (direct)
        uses: ryand56/r2-upload-action@b801a390acbdeb034c5e684ff5e1361c06639e7c
        with:
          r2-account-id: ${{ secrets.R2_ACCOUNT_ID }}
          r2-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          r2-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          r2-bucket: ${{ secrets.BUCKET }}
          source-dir: ./artifacts
