name: Build image

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read
  name: Build image

  on:
    push:
      branches: [ main ]
    pull_request:

  permissions:
    contents: read
    packages: write
    id-token: write

  jobs:
    set-env:
      if: github.repository != 'AlmaLinux/atomic-respin-template'
      runs-on: ubuntu-latest
      outputs:
        LATEST_TAG: ${{ steps.set.outputs.LATEST_TAG }}
        REGISTRY: ${{ steps.set.outputs.REGISTRY }}
        REGISTRY_USER: ${{ steps.set.outputs.REGISTRY_USER }}
        PLATFORMS: ${{ steps.set.outputs.PLATFORMS }}
        IMAGE_PATH: ${{ steps.set.outputs.IMAGE_PATH }}
        IMAGE_NAME: ${{ steps.set.outputs.IMAGE_NAME }}
        IMAGE_REF: ${{ steps.set.outputs.IMAGE_REF }}
        IS_SIGNED: ${{ steps.set.outputs.IS_SIGNED }}
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Set environment variables
          uses: ./.github/actions/config
          id: set
          with:
            SIGNING_SECRET: ${{ secrets.SIGNING_SECRET }}

    build-image:
      name: Build and push image
      runs-on: ubuntu-latest
      needs: [set-env]
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Log in to container registry
          env:
            REGISTRY: ${{ needs.set-env.outputs.REGISTRY }}
            REGISTRY_USER: ${{ needs.set-env.outputs.REGISTRY_USER }}
          run: |
            if [ -n "${REGISTRY}" ]; then
              # Prefer repository owner's GH token for ghcr, fallback to GHCR_PAT if set
              if [ "${{ github.repository_owner }}" = "kkslidermight" ]; then
                echo "${{ secrets.GITHUB_TOKEN }}" | podman login -u "${REGISTRY_USER}" --password-stdin "${REGISTRY}"
              else
                if [ -n "${{ secrets.GHCR_PAT }}" ]; then
                  echo "${{ secrets.GHCR_PAT }}" | podman login -u "${REGISTRY_USER}" --password-stdin "${REGISTRY}"
                fi
              fi
            fi

        - name: Build and push image
          id: build
          env:
            IMAGE_REF: ${{ needs.set-env.outputs.IMAGE_REF }}
            IMAGE_NAME: ${{ needs.set-env.outputs.IMAGE_NAME }}
            REGISTRY: ${{ needs.set-env.outputs.REGISTRY }}
          run: |
            IMAGE_TAG="${GITHUB_SHA}"
            FULL_IMAGE_REF="${IMAGE_REF}:${IMAGE_TAG}"
            podman build \
              --security-opt=label=disable \
              --cap-add=all \
              --device /dev/fuse \
              --build-arg IMAGE_NAME="${IMAGE_NAME}" \
              --build-arg IMAGE_REGISTRY="${REGISTRY}" \
              --build-arg VARIANT="" \
              -t "${FULL_IMAGE_REF}" \
              -f Dockerfile \
              .
            podman push "${FULL_IMAGE_REF}"
            DIGEST=$(podman inspect --format='{{.Digest}}' "${FULL_IMAGE_REF}")
            echo "image-ref=${IMAGE_REF}" >> $GITHUB_OUTPUT
            echo "digest=${DIGEST}" >> $GITHUB_OUTPUT
            echo "version=${IMAGE_TAG}" >> $GITHUB_OUTPUT
            echo "major-version=latest" >> $GITHUB_OUTPUT
            echo "redhat-version-id=10" >> $GITHUB_OUTPUT
          echo "redhat-version-id=10" >> $GITHUB_OUTPUT
